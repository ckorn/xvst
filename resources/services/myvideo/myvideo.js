/*
*
* This file is part of xVideoServiceThief,
* an open-source cross-platform Video service download
*
* Copyright (C) 2007 - 2009 Xesc & Technology
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with xVideoServiceThief. If not, see <http://www.gnu.org/licenses/>.
*
* Contact e-mail: Xesc <xeskuu.xvst@gmail.com>
* Program URL   : http://xviservicethief.sourceforge.net/
*
*/

function RegistVideoService()
{
	this.version = "2.0.0";
	this.minVersion = "2.0.0a";
	this.author = "Xesc & Technology 2009";
	this.website = "http://www.myvideo.de/";
	this.ID = "myvideo.de";
	this.caption = "MyVideo";
	this.adultContent = false;
	this.musicSite = false;
}

function getVideoInformation(url)
{
	const URL_FLV = "%1/%2.flv";
	// video information
	var result = new VideoDefinition();
	// download webpage
	var http = new Http();
	var html = http.downloadWebpage(url);
	// get the flv url and params
	var path = copyBetween(html, "<link rel='image_src' href='", "/thumbs");
	var vidId = copyBetween(html, path + "/thumbs/", "_");
	// get the video title
	result.title = copyBetween(html, "entry-title'>", "</a>");
	// build final url
	result.URL = strFormat(URL_FLV, path, vidId);
	// get cookies
	result.cookies = http.getCookies("|");
	// return the video information
	return result;
}

function searchVideos(keyWord, pageIndex)
{
	const URL_SEARCH = "http://www.myvideo.de/Videos_A-Z?lpage=%2&searchWord=%1&searchOrder=0";
	const HTML_SEARCH_START = "<table class='body sCenter vl_newMargin'>"; //'<div class="lBox lLeftBox globalBxBorder globalBx video_list">';
	const HTML_SEARCH_FINISH = '</table>'; //"</body>";
	const HTML_SEARCH_SEPARATOR = "<td class='body sTLeft hslice entry-content vCont' id='slice_";
	// replace all spaces for "+"
	keyWord = strReplace(keyWord, " ", "+");
	// init search results object
	var searchResults = new SearchResults();
	// init http object
	var http = new Http();
	var html = http.downloadWebpage(strFormat(URL_SEARCH, keyWord, pageIndex, searchResults.getUserLanguage()));
	// get the search summary
	var tmp = copyBetween(html, '<td> Dein Ergebnis', '</td>');
	var summary = "Dein Ergebnis" + copyBetween(tmp, "<span class='sWord'>", "'");
	var tmp = copyBetween(html, "<span class='pView pnPages'>", "</span>");
	var summary = summary + " " + tmp
	var tmp = copyBetween(html, "<span class='pView pnResults'>", "</span>");
	var summary = summary + " " + tmp
	searchResults.setSummary(summary);
	// get results html block
	var htmlResults = copyBetween(html, HTML_SEARCH_START, HTML_SEARCH_FINISH);
	// if we found some results then...
	if (htmlResults != "")
	{
		var block = "";
		// iterate over results
		while ((block = copyBetween(htmlResults, HTML_SEARCH_SEPARATOR, HTML_SEARCH_SEPARATOR)) != "")
		{
			parseResultItem(searchResults, block);
			htmlResults = strRemove(htmlResults, 0, block.toString().length);
		}
		// get last result
		parseResultItem(searchResults, htmlResults);
	}
	// return search results
	return searchResults;
}

function parseResultItem(searchResults, html)
{
	const VIDEO_URL = "http://www.myvideo.de";
	// vars
	var tmp, videoUrl, imageUrl, title, description, duration, rating;
	// get title and image url
	tmp = copyBetween(html, "<div class='vThumb'>", '</div>') ;
	title = copyBetween(tmp, "title='", "'");
	imageUrl = copyBetween(tmp, "src='", "'");
	// get video url
	videoUrl = VIDEO_URL + copyBetween(tmp, "href='", "'");
	//if (strIndexOf(imageUrl, "default.jpg") == -1) // if is not a "default.jpg"...
	//	imageUrl = copyBetween(tmp, 'thumb="', '"');
	// get video description
	tmp = copyBetween(html, "<div class='sCenter vTitle'>", '</div>') ;
	description = copyBetween(tmp, "<span class='hidden'>", '</span>');
	// get video duration
	tmp = copyBetween(html, ' Länge ', '/span>');
	duration = convertToSeconds(copyBetween(tmp, "> ", '<'));
	// get rating
	rating = getrating(copyBetween(html, 'ratingBox', '</div>'));
	// add to results list
	searchResults.addSearchResult(videoUrl, imageUrl, title, description, duration, rating);
}

function getrating(text)
{
	var rating = 0
	var i = 1
	while (i < 6)
	{
		var part = getToken(text, '<img',i);
		if (strIndexOf(part,"m_star_red_0.gif") != -1)
		{
			rating = rating + 1
		}
		if (strIndexOf(part,"m_star_half_0.gif") != -1)
		{
			rating = rating + 0.5
		}
		i++
	}
	return rating;
}

function convertToSeconds(text)
{
	// how many ":" exists?
	var count = getTokenCount(text, ":");
	// get mins and seconds
	var h = new Number(h = count == 3 ? getToken(text, ":", 0) * 3600 : 0);
	var m = new Number(getToken(text, ":", count - 2) * 60);
	var s = new Number(getToken(text, ":", count - 1));
	// convert h:m:s to seconds
	return h + m + s;
}

function getVideoServiceIcon()
{
	return new Array(
		0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,0x44,0x52,
		0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x10,0x08,0x06,0x00,0x00,0x00,0x1f,0xf3,0xff,
		0x61,0x00,0x00,0x00,0x09,0x70,0x48,0x59,0x73,0x00,0x00,0x0b,0x13,0x00,0x00,0x0b,
		0x13,0x01,0x00,0x9a,0x9c,0x18,0x00,0x00,0x01,0xe8,0x49,0x44,0x41,0x54,0x38,0x11,
		0x7d,0x53,0x4b,0x28,0x84,0x51,0x14,0xfe,0x66,0x3c,0xc6,0x63,0x3c,0x22,0x62,0x41,
		0x14,0x76,0x8a,0x62,0x67,0x16,0xb2,0x12,0x36,0x6a,0x36,0x16,0x32,0x7b,0x79,0x64,
		0xc5,0x86,0x85,0xd7,0x46,0x91,0x3d,0x56,0x16,0x26,0x65,0x63,0xc6,0x66,0x52,0x58,
		0x2a,0x42,0x16,0x28,0x46,0x69,0x50,0x53,0x33,0xcd,0xe0,0x9f,0x3c,0x7e,0xf7,0x3b,
		0xbf,0xff,0xf7,0x1b,0x72,0xea,0x9e,0x7b,0x1e,0xf7,0x7e,0xe7,0xdc,0x73,0xce,0x75,
		0xe8,0x8a,0xf0,0x45,0xc9,0xd4,0x07,0x56,0x0f,0x12,0x08,0x9e,0xbe,0x80,0xb2,0xdb,
		0xe5,0x84,0xb7,0x25,0x1f,0xde,0xd6,0x7c,0x91,0xcd,0x73,0xf6,0xdd,0x61,0x02,0xf0,
		0xc2,0xf0,0x7a,0x14,0x97,0x8f,0xaf,0xa8,0x28,0xca,0x80,0xa7,0x3e,0x07,0xee,0x1c,
		0x27,0xf6,0x2f,0x34,0x38,0xd4,0x8d,0xa5,0xbe,0xd2,0xbf,0x41,0x08,0x40,0x9a,0xd8,
		0x8c,0xea,0x9e,0xf9,0x3b,0xd9,0x13,0xda,0xbb,0x1e,0x89,0xbd,0xe9,0xdc,0x49,0x81,
		0x93,0x27,0xb1,0x8b,0x92,0xc6,0x9c,0x4c,0x87,0x51,0xf7,0x2f,0x35,0x89,0x3c,0xde,
		0x55,0x8c,0xfb,0xf8,0x3b,0xfc,0x87,0x49,0x2b,0x62,0x67,0x63,0x9e,0xf8,0x8e,0x6e,
		0x53,0xf6,0xec,0x45,0x16,0x80,0x9d,0xd3,0x67,0x51,0xbc,0x2d,0x6e,0xb9,0xc4,0x3a,
		0xf8,0xda,0x0a,0x8c,0xc3,0xc7,0x5b,0xb2,0x53,0xdf,0x39,0x7b,0x31,0x6c,0x36,0x2e,
		0x00,0x57,0x8f,0x6f,0x62,0xe2,0xbb,0x49,0xc9,0x94,0x6e,0x45,0x47,0x68,0x09,0x98,
		0xa8,0x85,0x3b,0xbc,0x27,0x59,0xc8,0x01,0x1b,0x33,0x9e,0xf0,0xf0,0x2a,0x26,0x16,
		0x8f,0x14,0x89,0x1b,0x80,0xa2,0x90,0x45,0x6f,0x80,0x85,0x76,0xf8,0x4e,0xfa,0x95,
		0x1c,0xb6,0xcc,0x14,0x04,0x80,0x1d,0xb0,0x53,0x52,0xd3,0xb1,0x1c,0x8a,0xdb,0x4d,
		0x86,0xcc,0xe7,0x4c,0x37,0x01,0xa1,0x45,0xcb,0x27,0x00,0x96,0xf6,0x25,0x74,0x36,
		0xe6,0xaa,0x22,0x3e,0xa5,0x9b,0x0d,0xfd,0x39,0x06,0x6c,0x8c,0x02,0x6b,0x3e,0xd1,
		0x05,0xa0,0xb9,0xda,0x25,0x0a,0xab,0x4f,0x62,0xc1,0xea,0xca,0xb3,0x44,0xfe,0xc5,
		0x4a,0x6b,0x80,0x81,0x55,0x63,0x29,0x67,0x26,0x0f,0x98,0x6f,0x67,0x9b,0xd8,0x32,
		0x4e,0xe0,0x8a,0xaf,0x8c,0xae,0x6f,0xca,0x2b,0x06,0x3a,0x46,0x80,0xee,0xc9,0x6f,
		0x9b,0x92,0x24,0x83,0xa6,0xaa,0x6c,0x31,0xfe,0xd5,0x26,0x71,0xf4,0x4c,0x01,0x33,
		0xd7,0x98,0x75,0x0e,0x89,0x6a,0x67,0x02,0xe0,0x69,0x50,0x63,0xab,0xa2,0x32,0x03,
		0x0e,0xd4,0x0f,0x1a,0xdb,0x95,0xa8,0xfe,0xf3,0x2c,0x54,0x16,0x4a,0xc2,0x3f,0xdc,
		0x02,0xc0,0xcb,0xe6,0xe0,0xcc,0x6d,0xc7,0x7e,0x81,0x04,0xd5,0xa0,0x71,0xb8,0xf8,
		0xa9,0xd2,0xc9,0xfa,0x4c,0x74,0xcc,0x05,0x62,0xea,0x27,0x1a,0x53,0xc9,0x22,0x16,
		0xa8,0xcf,0x94,0xd0,0x3e,0x70,0xa5,0x46,0x7d,0xa6,0xb7,0x44,0x3e,0xd8,0xbf,0x00,
		0x74,0x32,0x12,0x5b,0x68,0xce,0x46,0xbd,0x02,0x1a,0xec,0x28,0x84,0xd9,0xa9,0x74,
		0x80,0x4f,0x07,0x47,0xe0,0x9e,0x95,0x4c,0xcb,0x8e,0x00,0x00,0x00,0x00,0x49,0x45,
		0x4e,0x44,0xae,0x42,0x60,0x82);
}
